// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: v1/clientProtocol.proto

package org.apache.geode.internal.protocol.protobuf.v1;

public final class ClientProtocol {
  private ClientProtocol() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public interface MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.geode.internal.protocol.protobuf.v1.Message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
     */
    boolean hasRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request getRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder getRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
     */
    boolean hasResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response getResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder getResponseOrBuilder();

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message.MessageTypeCase getMessageTypeCase();
  }
  /**
   * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.Message}
   */
  public static final class Message extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.geode.internal.protocol.protobuf.v1.Message)
      MessageOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Message() {}

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Message(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder subBuilder =
                  null;
              if (messageTypeCase_ == 1) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_)
                        .toBuilder();
              }
              messageType_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_);
                messageType_ = subBuilder.buildPartial();
              }
              messageTypeCase_ = 1;
              break;
            }
            case 18: {
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder subBuilder =
                  null;
              if (messageTypeCase_ == 2) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_)
                        .toBuilder();
              }
              messageType_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_);
                messageType_ = subBuilder.buildPartial();
              }
              messageTypeCase_ = 2;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message.class,
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message.Builder.class);
    }

    private int messageTypeCase_ = 0;
    private java.lang.Object messageType_;

    public enum MessageTypeCase implements com.google.protobuf.Internal.EnumLite {
      REQUEST(1), RESPONSE(2), MESSAGETYPE_NOT_SET(0);
      private final int value;

      private MessageTypeCase(int value) {
        this.value = value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageTypeCase forNumber(int value) {
        switch (value) {
          case 1:
            return REQUEST;
          case 2:
            return RESPONSE;
          case 0:
            return MESSAGETYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public MessageTypeCase getMessageTypeCase() {
      return MessageTypeCase.forNumber(messageTypeCase_);
    }

    public static final int REQUEST_FIELD_NUMBER = 1;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
     */
    public boolean hasRequest() {
      return messageTypeCase_ == 1;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request getRequest() {
      if (messageTypeCase_ == 1) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder getRequestOrBuilder() {
      if (messageTypeCase_ == 1) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
          .getDefaultInstance();
    }

    public static final int RESPONSE_FIELD_NUMBER = 2;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
     */
    public boolean hasResponse() {
      return messageTypeCase_ == 2;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response getResponse() {
      if (messageTypeCase_ == 2) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder getResponseOrBuilder() {
      if (messageTypeCase_ == 2) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
          .getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (messageTypeCase_ == 1) {
        output.writeMessage(1,
            (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_);
      }
      if (messageTypeCase_ == 2) {
        output.writeMessage(2,
            (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (messageTypeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1,
            (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_);
      }
      if (messageTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2,
            (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message)) {
        return super.equals(obj);
      }
      org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message other =
          (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message) obj;

      boolean result = true;
      result = result && getMessageTypeCase().equals(other.getMessageTypeCase());
      if (!result)
        return false;
      switch (messageTypeCase_) {
        case 1:
          result = result && getRequest().equals(other.getRequest());
          break;
        case 2:
          result = result && getResponse().equals(other.getResponse());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (messageTypeCase_) {
        case 1:
          hash = (37 * hash) + REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRequest().hashCode();
          break;
        case 2:
          hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getResponse().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.Message}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.geode.internal.protocol.protobuf.v1.Message)
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message.class,
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message.Builder.class);
      }

      // Construct using
      // org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        messageTypeCase_ = 0;
        messageType_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_descriptor;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message getDefaultInstanceForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message
            .getDefaultInstance();
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message build() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message buildPartial() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message result =
            new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message(this);
        if (messageTypeCase_ == 1) {
          if (requestBuilder_ == null) {
            result.messageType_ = messageType_;
          } else {
            result.messageType_ = requestBuilder_.build();
          }
        }
        if (messageTypeCase_ == 2) {
          if (responseBuilder_ == null) {
            result.messageType_ = messageType_;
          } else {
            result.messageType_ = responseBuilder_.build();
          }
        }
        result.messageTypeCase_ = messageTypeCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message) {
          return mergeFrom(
              (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message other) {
        if (other == org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message
            .getDefaultInstance())
          return this;
        switch (other.getMessageTypeCase()) {
          case REQUEST: {
            mergeRequest(other.getRequest());
            break;
          }
          case RESPONSE: {
            mergeResponse(other.getResponse());
            break;
          }
          case MESSAGETYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message) e
              .getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int messageTypeCase_ = 0;
      private java.lang.Object messageType_;

      public MessageTypeCase getMessageTypeCase() {
        return MessageTypeCase.forNumber(messageTypeCase_);
      }

      public Builder clearMessageType() {
        messageTypeCase_ = 0;
        messageType_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder> requestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public boolean hasRequest() {
        return messageTypeCase_ == 1;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request getRequest() {
        if (requestBuilder_ == null) {
          if (messageTypeCase_ == 1) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
              .getDefaultInstance();
        } else {
          if (messageTypeCase_ == 1) {
            return requestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public Builder setRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageType_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        messageTypeCase_ = 1;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public Builder setRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder builderForValue) {
        if (requestBuilder_ == null) {
          messageType_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        messageTypeCase_ = 1;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public Builder mergeRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request value) {
        if (requestBuilder_ == null) {
          if (messageTypeCase_ == 1
              && messageType_ != org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
                  .getDefaultInstance()) {
            messageType_ = org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_)
                .mergeFrom(value).buildPartial();
          } else {
            messageType_ = value;
          }
          onChanged();
        } else {
          if (messageTypeCase_ == 1) {
            requestBuilder_.mergeFrom(value);
          }
          requestBuilder_.setMessage(value);
        }
        messageTypeCase_ = 1;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          if (messageTypeCase_ == 1) {
            messageTypeCase_ = 0;
            messageType_ = null;
            onChanged();
          }
        } else {
          if (messageTypeCase_ == 1) {
            messageTypeCase_ = 0;
            messageType_ = null;
          }
          requestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder getRequestBuilder() {
        return getRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder getRequestOrBuilder() {
        if ((messageTypeCase_ == 1) && (requestBuilder_ != null)) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          if (messageTypeCase_ == 1) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Request request = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder> getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          if (!(messageTypeCase_ == 1)) {
            messageType_ = org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
                .getDefaultInstance();
          }
          requestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) messageType_,
                  getParentForChildren(), isClean());
          messageType_ = null;
        }
        messageTypeCase_ = 1;
        onChanged();;
        return requestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder> responseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public boolean hasResponse() {
        return messageTypeCase_ == 2;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response getResponse() {
        if (responseBuilder_ == null) {
          if (messageTypeCase_ == 2) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
              .getDefaultInstance();
        } else {
          if (messageTypeCase_ == 2) {
            return responseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public Builder setResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageType_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }
        messageTypeCase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public Builder setResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder builderForValue) {
        if (responseBuilder_ == null) {
          messageType_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }
        messageTypeCase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public Builder mergeResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response value) {
        if (responseBuilder_ == null) {
          if (messageTypeCase_ == 2
              && messageType_ != org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
                  .getDefaultInstance()) {
            messageType_ = org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_)
                .mergeFrom(value).buildPartial();
          } else {
            messageType_ = value;
          }
          onChanged();
        } else {
          if (messageTypeCase_ == 2) {
            responseBuilder_.mergeFrom(value);
          }
          responseBuilder_.setMessage(value);
        }
        messageTypeCase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          if (messageTypeCase_ == 2) {
            messageTypeCase_ = 0;
            messageType_ = null;
            onChanged();
          }
        } else {
          if (messageTypeCase_ == 2) {
            messageTypeCase_ = 0;
            messageType_ = null;
          }
          responseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder getResponseBuilder() {
        return getResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder getResponseOrBuilder() {
        if ((messageTypeCase_ == 2) && (responseBuilder_ != null)) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          if (messageTypeCase_ == 2) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Response response = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder> getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          if (!(messageTypeCase_ == 2)) {
            messageType_ = org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
                .getDefaultInstance();
          }
          responseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) messageType_,
                  getParentForChildren(), isClean());
          messageType_ = null;
        }
        messageTypeCase_ = 2;
        onChanged();;
        return responseBuilder_;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.geode.internal.protocol.protobuf.v1.Message)
    }

    // @@protoc_insertion_point(class_scope:org.apache.geode.internal.protocol.protobuf.v1.Message)
    private static final org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE =
          new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message();
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message> PARSER =
        new com.google.protobuf.AbstractParser<Message>() {
          public Message parsePartialFrom(com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Message(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Message> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.geode.internal.protocol.protobuf.v1.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
     */
    boolean hasCallbackArg();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments getCallbackArg();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArgumentsOrBuilder getCallbackArgOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
     */
    boolean hasPutRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest getPutRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequestOrBuilder getPutRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
     */
    boolean hasGetRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest getGetRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequestOrBuilder getGetRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
     */
    boolean hasPutAllRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest getPutAllRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequestOrBuilder getPutAllRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
     */
    boolean hasGetAllRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest getGetAllRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequestOrBuilder getGetAllRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
     */
    boolean hasRemoveRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest getRemoveRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequestOrBuilder getRemoveRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
     */
    boolean hasRemoveAllRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest getRemoveAllRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequestOrBuilder getRemoveAllRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
     */
    boolean hasGetAvailableServersRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest getGetAvailableServersRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder getGetAvailableServersRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
     */
    boolean hasGetRegionNamesRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest getGetRegionNamesRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequestOrBuilder getGetRegionNamesRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
     */
    boolean hasGetRegionRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest getGetRegionRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequestOrBuilder getGetRegionRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
     */
    boolean hasAuthenticationRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest getAuthenticationRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequestOrBuilder getAuthenticationRequestOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
     */
    boolean hasHandshakeRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest getHandshakeRequest();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequestOrBuilder getHandshakeRequestOrBuilder();

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.RequestAPICase getRequestAPICase();
  }
  /**
   * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.Request}
   */
  public static final class Request extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.geode.internal.protocol.protobuf.v1.Request)
      RequestOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Request() {}

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Request(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments.Builder subBuilder =
                  null;
              if (callbackArg_ != null) {
                subBuilder = callbackArg_.toBuilder();
              }
              callbackArg_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(callbackArg_);
                callbackArg_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 2) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 2;
              break;
            }
            case 26: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 3) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 3;
              break;
            }
            case 34: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 4) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 4;
              break;
            }
            case 42: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 5) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 5;
              break;
            }
            case 50: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 6) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 6;
              break;
            }
            case 58: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 7) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 7;
              break;
            }
            case 338: {
              org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 42) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 42;
              break;
            }
            case 346: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 43) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 43;
              break;
            }
            case 354: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 44) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 44;
              break;
            }
            case 802: {
              org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 100) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 100;
              break;
            }
            case 810: {
              org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest.Builder subBuilder =
                  null;
              if (requestAPICase_ == 101) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_)
                        .toBuilder();
              }
              requestAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_);
                requestAPI_ = subBuilder.buildPartial();
              }
              requestAPICase_ = 101;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.class,
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder.class);
    }

    private int requestAPICase_ = 0;
    private java.lang.Object requestAPI_;

    public enum RequestAPICase implements com.google.protobuf.Internal.EnumLite {
      PUTREQUEST(2), GETREQUEST(3), PUTALLREQUEST(4), GETALLREQUEST(5), REMOVEREQUEST(
          6), REMOVEALLREQUEST(7), GETAVAILABLESERVERSREQUEST(42), GETREGIONNAMESREQUEST(
              43), GETREGIONREQUEST(
                  44), AUTHENTICATIONREQUEST(100), HANDSHAKEREQUEST(101), REQUESTAPI_NOT_SET(0);
      private final int value;

      private RequestAPICase(int value) {
        this.value = value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestAPICase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestAPICase forNumber(int value) {
        switch (value) {
          case 2:
            return PUTREQUEST;
          case 3:
            return GETREQUEST;
          case 4:
            return PUTALLREQUEST;
          case 5:
            return GETALLREQUEST;
          case 6:
            return REMOVEREQUEST;
          case 7:
            return REMOVEALLREQUEST;
          case 42:
            return GETAVAILABLESERVERSREQUEST;
          case 43:
            return GETREGIONNAMESREQUEST;
          case 44:
            return GETREGIONREQUEST;
          case 100:
            return AUTHENTICATIONREQUEST;
          case 101:
            return HANDSHAKEREQUEST;
          case 0:
            return REQUESTAPI_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public RequestAPICase getRequestAPICase() {
      return RequestAPICase.forNumber(requestAPICase_);
    }

    public static final int CALLBACKARG_FIELD_NUMBER = 1;
    private org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments callbackArg_;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
     */
    public boolean hasCallbackArg() {
      return callbackArg_ != null;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments getCallbackArg() {
      return callbackArg_ == null
          ? org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments
              .getDefaultInstance()
          : callbackArg_;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArgumentsOrBuilder getCallbackArgOrBuilder() {
      return getCallbackArg();
    }

    public static final int PUTREQUEST_FIELD_NUMBER = 2;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
     */
    public boolean hasPutRequest() {
      return requestAPICase_ == 2;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest getPutRequest() {
      if (requestAPICase_ == 2) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequestOrBuilder getPutRequestOrBuilder() {
      if (requestAPICase_ == 2) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
          .getDefaultInstance();
    }

    public static final int GETREQUEST_FIELD_NUMBER = 3;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
     */
    public boolean hasGetRequest() {
      return requestAPICase_ == 3;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest getGetRequest() {
      if (requestAPICase_ == 3) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequestOrBuilder getGetRequestOrBuilder() {
      if (requestAPICase_ == 3) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
          .getDefaultInstance();
    }

    public static final int PUTALLREQUEST_FIELD_NUMBER = 4;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
     */
    public boolean hasPutAllRequest() {
      return requestAPICase_ == 4;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest getPutAllRequest() {
      if (requestAPICase_ == 4) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequestOrBuilder getPutAllRequestOrBuilder() {
      if (requestAPICase_ == 4) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
          .getDefaultInstance();
    }

    public static final int GETALLREQUEST_FIELD_NUMBER = 5;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
     */
    public boolean hasGetAllRequest() {
      return requestAPICase_ == 5;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest getGetAllRequest() {
      if (requestAPICase_ == 5) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequestOrBuilder getGetAllRequestOrBuilder() {
      if (requestAPICase_ == 5) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
          .getDefaultInstance();
    }

    public static final int REMOVEREQUEST_FIELD_NUMBER = 6;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
     */
    public boolean hasRemoveRequest() {
      return requestAPICase_ == 6;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest getRemoveRequest() {
      if (requestAPICase_ == 6) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequestOrBuilder getRemoveRequestOrBuilder() {
      if (requestAPICase_ == 6) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
          .getDefaultInstance();
    }

    public static final int REMOVEALLREQUEST_FIELD_NUMBER = 7;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
     */
    public boolean hasRemoveAllRequest() {
      return requestAPICase_ == 7;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest getRemoveAllRequest() {
      if (requestAPICase_ == 7) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequestOrBuilder getRemoveAllRequestOrBuilder() {
      if (requestAPICase_ == 7) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
          .getDefaultInstance();
    }

    public static final int GETAVAILABLESERVERSREQUEST_FIELD_NUMBER = 42;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
     */
    public boolean hasGetAvailableServersRequest() {
      return requestAPICase_ == 42;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest getGetAvailableServersRequest() {
      if (requestAPICase_ == 42) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder getGetAvailableServersRequestOrBuilder() {
      if (requestAPICase_ == 42) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
          .getDefaultInstance();
    }

    public static final int GETREGIONNAMESREQUEST_FIELD_NUMBER = 43;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
     */
    public boolean hasGetRegionNamesRequest() {
      return requestAPICase_ == 43;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest getGetRegionNamesRequest() {
      if (requestAPICase_ == 43) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequestOrBuilder getGetRegionNamesRequestOrBuilder() {
      if (requestAPICase_ == 43) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
          .getDefaultInstance();
    }

    public static final int GETREGIONREQUEST_FIELD_NUMBER = 44;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
     */
    public boolean hasGetRegionRequest() {
      return requestAPICase_ == 44;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest getGetRegionRequest() {
      if (requestAPICase_ == 44) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequestOrBuilder getGetRegionRequestOrBuilder() {
      if (requestAPICase_ == 44) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
          .getDefaultInstance();
    }

    public static final int AUTHENTICATIONREQUEST_FIELD_NUMBER = 100;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
     */
    public boolean hasAuthenticationRequest() {
      return requestAPICase_ == 100;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest getAuthenticationRequest() {
      if (requestAPICase_ == 100) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequestOrBuilder getAuthenticationRequestOrBuilder() {
      if (requestAPICase_ == 100) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
          .getDefaultInstance();
    }

    public static final int HANDSHAKEREQUEST_FIELD_NUMBER = 101;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
     */
    public boolean hasHandshakeRequest() {
      return requestAPICase_ == 101;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest getHandshakeRequest() {
      if (requestAPICase_ == 101) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequestOrBuilder getHandshakeRequestOrBuilder() {
      if (requestAPICase_ == 101) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
          .getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (callbackArg_ != null) {
        output.writeMessage(1, getCallbackArg());
      }
      if (requestAPICase_ == 2) {
        output.writeMessage(2,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_);
      }
      if (requestAPICase_ == 3) {
        output.writeMessage(3,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_);
      }
      if (requestAPICase_ == 4) {
        output.writeMessage(4,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_);
      }
      if (requestAPICase_ == 5) {
        output.writeMessage(5,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_);
      }
      if (requestAPICase_ == 6) {
        output.writeMessage(6,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_);
      }
      if (requestAPICase_ == 7) {
        output.writeMessage(7,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_);
      }
      if (requestAPICase_ == 42) {
        output.writeMessage(42,
            (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_);
      }
      if (requestAPICase_ == 43) {
        output.writeMessage(43,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_);
      }
      if (requestAPICase_ == 44) {
        output.writeMessage(44,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_);
      }
      if (requestAPICase_ == 100) {
        output.writeMessage(100,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_);
      }
      if (requestAPICase_ == 101) {
        output.writeMessage(101,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (callbackArg_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getCallbackArg());
      }
      if (requestAPICase_ == 2) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_);
      }
      if (requestAPICase_ == 3) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_);
      }
      if (requestAPICase_ == 4) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(4,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_);
      }
      if (requestAPICase_ == 5) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_);
      }
      if (requestAPICase_ == 6) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_);
      }
      if (requestAPICase_ == 7) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_);
      }
      if (requestAPICase_ == 42) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(42,
            (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_);
      }
      if (requestAPICase_ == 43) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(43,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_);
      }
      if (requestAPICase_ == 44) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(44,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_);
      }
      if (requestAPICase_ == 100) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(100,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_);
      }
      if (requestAPICase_ == 101) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(101,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request)) {
        return super.equals(obj);
      }
      org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request other =
          (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) obj;

      boolean result = true;
      result = result && (hasCallbackArg() == other.hasCallbackArg());
      if (hasCallbackArg()) {
        result = result && getCallbackArg().equals(other.getCallbackArg());
      }
      result = result && getRequestAPICase().equals(other.getRequestAPICase());
      if (!result)
        return false;
      switch (requestAPICase_) {
        case 2:
          result = result && getPutRequest().equals(other.getPutRequest());
          break;
        case 3:
          result = result && getGetRequest().equals(other.getGetRequest());
          break;
        case 4:
          result = result && getPutAllRequest().equals(other.getPutAllRequest());
          break;
        case 5:
          result = result && getGetAllRequest().equals(other.getGetAllRequest());
          break;
        case 6:
          result = result && getRemoveRequest().equals(other.getRemoveRequest());
          break;
        case 7:
          result = result && getRemoveAllRequest().equals(other.getRemoveAllRequest());
          break;
        case 42:
          result = result
              && getGetAvailableServersRequest().equals(other.getGetAvailableServersRequest());
          break;
        case 43:
          result = result && getGetRegionNamesRequest().equals(other.getGetRegionNamesRequest());
          break;
        case 44:
          result = result && getGetRegionRequest().equals(other.getGetRegionRequest());
          break;
        case 100:
          result = result && getAuthenticationRequest().equals(other.getAuthenticationRequest());
          break;
        case 101:
          result = result && getHandshakeRequest().equals(other.getHandshakeRequest());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCallbackArg()) {
        hash = (37 * hash) + CALLBACKARG_FIELD_NUMBER;
        hash = (53 * hash) + getCallbackArg().hashCode();
      }
      switch (requestAPICase_) {
        case 2:
          hash = (37 * hash) + PUTREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getPutRequest().hashCode();
          break;
        case 3:
          hash = (37 * hash) + GETREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getGetRequest().hashCode();
          break;
        case 4:
          hash = (37 * hash) + PUTALLREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getPutAllRequest().hashCode();
          break;
        case 5:
          hash = (37 * hash) + GETALLREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getGetAllRequest().hashCode();
          break;
        case 6:
          hash = (37 * hash) + REMOVEREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoveRequest().hashCode();
          break;
        case 7:
          hash = (37 * hash) + REMOVEALLREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoveAllRequest().hashCode();
          break;
        case 42:
          hash = (37 * hash) + GETAVAILABLESERVERSREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getGetAvailableServersRequest().hashCode();
          break;
        case 43:
          hash = (37 * hash) + GETREGIONNAMESREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getGetRegionNamesRequest().hashCode();
          break;
        case 44:
          hash = (37 * hash) + GETREGIONREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getGetRegionRequest().hashCode();
          break;
        case 100:
          hash = (37 * hash) + AUTHENTICATIONREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getAuthenticationRequest().hashCode();
          break;
        case 101:
          hash = (37 * hash) + HANDSHAKEREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getHandshakeRequest().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.Request}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.geode.internal.protocol.protobuf.v1.Request)
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.class,
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.Builder.class);
      }

      // Construct using
      // org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        if (callbackArgBuilder_ == null) {
          callbackArg_ = null;
        } else {
          callbackArg_ = null;
          callbackArgBuilder_ = null;
        }
        requestAPICase_ = 0;
        requestAPI_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_descriptor;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request getDefaultInstanceForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
            .getDefaultInstance();
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request build() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request buildPartial() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request result =
            new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request(this);
        if (callbackArgBuilder_ == null) {
          result.callbackArg_ = callbackArg_;
        } else {
          result.callbackArg_ = callbackArgBuilder_.build();
        }
        if (requestAPICase_ == 2) {
          if (putRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = putRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 3) {
          if (getRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = getRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 4) {
          if (putAllRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = putAllRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 5) {
          if (getAllRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = getAllRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 6) {
          if (removeRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = removeRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 7) {
          if (removeAllRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = removeAllRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 42) {
          if (getAvailableServersRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = getAvailableServersRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 43) {
          if (getRegionNamesRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = getRegionNamesRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 44) {
          if (getRegionRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = getRegionRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 100) {
          if (authenticationRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = authenticationRequestBuilder_.build();
          }
        }
        if (requestAPICase_ == 101) {
          if (handshakeRequestBuilder_ == null) {
            result.requestAPI_ = requestAPI_;
          } else {
            result.requestAPI_ = handshakeRequestBuilder_.build();
          }
        }
        result.requestAPICase_ = requestAPICase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) {
          return mergeFrom(
              (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request other) {
        if (other == org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request
            .getDefaultInstance())
          return this;
        if (other.hasCallbackArg()) {
          mergeCallbackArg(other.getCallbackArg());
        }
        switch (other.getRequestAPICase()) {
          case PUTREQUEST: {
            mergePutRequest(other.getPutRequest());
            break;
          }
          case GETREQUEST: {
            mergeGetRequest(other.getGetRequest());
            break;
          }
          case PUTALLREQUEST: {
            mergePutAllRequest(other.getPutAllRequest());
            break;
          }
          case GETALLREQUEST: {
            mergeGetAllRequest(other.getGetAllRequest());
            break;
          }
          case REMOVEREQUEST: {
            mergeRemoveRequest(other.getRemoveRequest());
            break;
          }
          case REMOVEALLREQUEST: {
            mergeRemoveAllRequest(other.getRemoveAllRequest());
            break;
          }
          case GETAVAILABLESERVERSREQUEST: {
            mergeGetAvailableServersRequest(other.getGetAvailableServersRequest());
            break;
          }
          case GETREGIONNAMESREQUEST: {
            mergeGetRegionNamesRequest(other.getGetRegionNamesRequest());
            break;
          }
          case GETREGIONREQUEST: {
            mergeGetRegionRequest(other.getGetRegionRequest());
            break;
          }
          case AUTHENTICATIONREQUEST: {
            mergeAuthenticationRequest(other.getAuthenticationRequest());
            break;
          }
          case HANDSHAKEREQUEST: {
            mergeHandshakeRequest(other.getHandshakeRequest());
            break;
          }
          case REQUESTAPI_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request) e
              .getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int requestAPICase_ = 0;
      private java.lang.Object requestAPI_;

      public RequestAPICase getRequestAPICase() {
        return RequestAPICase.forNumber(requestAPICase_);
      }

      public Builder clearRequestAPI() {
        requestAPICase_ = 0;
        requestAPI_ = null;
        onChanged();
        return this;
      }


      private org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments callbackArg_ =
          null;
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArgumentsOrBuilder> callbackArgBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public boolean hasCallbackArg() {
        return callbackArgBuilder_ != null || callbackArg_ != null;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments getCallbackArg() {
        if (callbackArgBuilder_ == null) {
          return callbackArg_ == null
              ? org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments
                  .getDefaultInstance()
              : callbackArg_;
        } else {
          return callbackArgBuilder_.getMessage();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public Builder setCallbackArg(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments value) {
        if (callbackArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          callbackArg_ = value;
          onChanged();
        } else {
          callbackArgBuilder_.setMessage(value);
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public Builder setCallbackArg(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments.Builder builderForValue) {
        if (callbackArgBuilder_ == null) {
          callbackArg_ = builderForValue.build();
          onChanged();
        } else {
          callbackArgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public Builder mergeCallbackArg(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments value) {
        if (callbackArgBuilder_ == null) {
          if (callbackArg_ != null) {
            callbackArg_ =
                org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments
                    .newBuilder(callbackArg_).mergeFrom(value).buildPartial();
          } else {
            callbackArg_ = value;
          }
          onChanged();
        } else {
          callbackArgBuilder_.mergeFrom(value);
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public Builder clearCallbackArg() {
        if (callbackArgBuilder_ == null) {
          callbackArg_ = null;
          onChanged();
        } else {
          callbackArg_ = null;
          callbackArgBuilder_ = null;
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments.Builder getCallbackArgBuilder() {

        onChanged();
        return getCallbackArgFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArgumentsOrBuilder getCallbackArgOrBuilder() {
        if (callbackArgBuilder_ != null) {
          return callbackArgBuilder_.getMessageOrBuilder();
        } else {
          return callbackArg_ == null
              ? org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments
                  .getDefaultInstance()
              : callbackArg_;
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.CallbackArguments callbackArg = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArgumentsOrBuilder> getCallbackArgFieldBuilder() {
        if (callbackArgBuilder_ == null) {
          callbackArgBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArguments.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.CallbackArgumentsOrBuilder>(
                  getCallbackArg(), getParentForChildren(), isClean());
          callbackArg_ = null;
        }
        return callbackArgBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequestOrBuilder> putRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public boolean hasPutRequest() {
        return requestAPICase_ == 2;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest getPutRequest() {
        if (putRequestBuilder_ == null) {
          if (requestAPICase_ == 2) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 2) {
            return putRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public Builder setPutRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest value) {
        if (putRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          putRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public Builder setPutRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.Builder builderForValue) {
        if (putRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          putRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public Builder mergePutRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest value) {
        if (putRequestBuilder_ == null) {
          if (requestAPICase_ == 2
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 2) {
            putRequestBuilder_.mergeFrom(value);
          }
          putRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public Builder clearPutRequest() {
        if (putRequestBuilder_ == null) {
          if (requestAPICase_ == 2) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 2) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          putRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.Builder getPutRequestBuilder() {
        return getPutRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequestOrBuilder getPutRequestOrBuilder() {
        if ((requestAPICase_ == 2) && (putRequestBuilder_ != null)) {
          return putRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 2) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutRequest putRequest = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequestOrBuilder> getPutRequestFieldBuilder() {
        if (putRequestBuilder_ == null) {
          if (!(requestAPICase_ == 2)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest
                .getDefaultInstance();
          }
          putRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 2;
        onChanged();;
        return putRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequestOrBuilder> getRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public boolean hasGetRequest() {
        return requestAPICase_ == 3;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest getGetRequest() {
        if (getRequestBuilder_ == null) {
          if (requestAPICase_ == 3) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 3) {
            return getRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public Builder setGetRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest value) {
        if (getRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          getRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 3;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public Builder setGetRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.Builder builderForValue) {
        if (getRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          getRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 3;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public Builder mergeGetRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest value) {
        if (getRequestBuilder_ == null) {
          if (requestAPICase_ == 3
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 3) {
            getRequestBuilder_.mergeFrom(value);
          }
          getRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 3;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public Builder clearGetRequest() {
        if (getRequestBuilder_ == null) {
          if (requestAPICase_ == 3) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 3) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          getRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.Builder getGetRequestBuilder() {
        return getGetRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequestOrBuilder getGetRequestOrBuilder() {
        if ((requestAPICase_ == 3) && (getRequestBuilder_ != null)) {
          return getRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 3) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRequest getRequest = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequestOrBuilder> getGetRequestFieldBuilder() {
        if (getRequestBuilder_ == null) {
          if (!(requestAPICase_ == 3)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest
                .getDefaultInstance();
          }
          getRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 3;
        onChanged();;
        return getRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequestOrBuilder> putAllRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public boolean hasPutAllRequest() {
        return requestAPICase_ == 4;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest getPutAllRequest() {
        if (putAllRequestBuilder_ == null) {
          if (requestAPICase_ == 4) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 4) {
            return putAllRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public Builder setPutAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest value) {
        if (putAllRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          putAllRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 4;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public Builder setPutAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.Builder builderForValue) {
        if (putAllRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          putAllRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 4;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public Builder mergePutAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest value) {
        if (putAllRequestBuilder_ == null) {
          if (requestAPICase_ == 4
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 4) {
            putAllRequestBuilder_.mergeFrom(value);
          }
          putAllRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 4;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public Builder clearPutAllRequest() {
        if (putAllRequestBuilder_ == null) {
          if (requestAPICase_ == 4) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 4) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          putAllRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.Builder getPutAllRequestBuilder() {
        return getPutAllRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequestOrBuilder getPutAllRequestOrBuilder() {
        if ((requestAPICase_ == 4) && (putAllRequestBuilder_ != null)) {
          return putAllRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 4) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest putAllRequest = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequestOrBuilder> getPutAllRequestFieldBuilder() {
        if (putAllRequestBuilder_ == null) {
          if (!(requestAPICase_ == 4)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest
                .getDefaultInstance();
          }
          putAllRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 4;
        onChanged();;
        return putAllRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequestOrBuilder> getAllRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public boolean hasGetAllRequest() {
        return requestAPICase_ == 5;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest getGetAllRequest() {
        if (getAllRequestBuilder_ == null) {
          if (requestAPICase_ == 5) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 5) {
            return getAllRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public Builder setGetAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest value) {
        if (getAllRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          getAllRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 5;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public Builder setGetAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.Builder builderForValue) {
        if (getAllRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          getAllRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 5;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public Builder mergeGetAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest value) {
        if (getAllRequestBuilder_ == null) {
          if (requestAPICase_ == 5
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 5) {
            getAllRequestBuilder_.mergeFrom(value);
          }
          getAllRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 5;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public Builder clearGetAllRequest() {
        if (getAllRequestBuilder_ == null) {
          if (requestAPICase_ == 5) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 5) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          getAllRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.Builder getGetAllRequestBuilder() {
        return getGetAllRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequestOrBuilder getGetAllRequestOrBuilder() {
        if ((requestAPICase_ == 5) && (getAllRequestBuilder_ != null)) {
          return getAllRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 5) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest getAllRequest = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequestOrBuilder> getGetAllRequestFieldBuilder() {
        if (getAllRequestBuilder_ == null) {
          if (!(requestAPICase_ == 5)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest
                .getDefaultInstance();
          }
          getAllRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 5;
        onChanged();;
        return getAllRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequestOrBuilder> removeRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public boolean hasRemoveRequest() {
        return requestAPICase_ == 6;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest getRemoveRequest() {
        if (removeRequestBuilder_ == null) {
          if (requestAPICase_ == 6) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 6) {
            return removeRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public Builder setRemoveRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest value) {
        if (removeRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          removeRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 6;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public Builder setRemoveRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.Builder builderForValue) {
        if (removeRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          removeRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 6;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public Builder mergeRemoveRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest value) {
        if (removeRequestBuilder_ == null) {
          if (requestAPICase_ == 6
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 6) {
            removeRequestBuilder_.mergeFrom(value);
          }
          removeRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 6;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public Builder clearRemoveRequest() {
        if (removeRequestBuilder_ == null) {
          if (requestAPICase_ == 6) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 6) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          removeRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.Builder getRemoveRequestBuilder() {
        return getRemoveRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequestOrBuilder getRemoveRequestOrBuilder() {
        if ((requestAPICase_ == 6) && (removeRequestBuilder_ != null)) {
          return removeRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 6) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest removeRequest = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequestOrBuilder> getRemoveRequestFieldBuilder() {
        if (removeRequestBuilder_ == null) {
          if (!(requestAPICase_ == 6)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest
                .getDefaultInstance();
          }
          removeRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 6;
        onChanged();;
        return removeRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequestOrBuilder> removeAllRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public boolean hasRemoveAllRequest() {
        return requestAPICase_ == 7;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest getRemoveAllRequest() {
        if (removeAllRequestBuilder_ == null) {
          if (requestAPICase_ == 7) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 7) {
            return removeAllRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public Builder setRemoveAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest value) {
        if (removeAllRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          removeAllRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 7;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public Builder setRemoveAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest.Builder builderForValue) {
        if (removeAllRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          removeAllRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 7;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public Builder mergeRemoveAllRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest value) {
        if (removeAllRequestBuilder_ == null) {
          if (requestAPICase_ == 7
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 7) {
            removeAllRequestBuilder_.mergeFrom(value);
          }
          removeAllRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 7;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public Builder clearRemoveAllRequest() {
        if (removeAllRequestBuilder_ == null) {
          if (requestAPICase_ == 7) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 7) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          removeAllRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest.Builder getRemoveAllRequestBuilder() {
        return getRemoveAllRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequestOrBuilder getRemoveAllRequestOrBuilder() {
        if ((requestAPICase_ == 7) && (removeAllRequestBuilder_ != null)) {
          return removeAllRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 7) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllRequest removeAllRequest = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequestOrBuilder> getRemoveAllRequestFieldBuilder() {
        if (removeAllRequestBuilder_ == null) {
          if (!(requestAPICase_ == 7)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest
                .getDefaultInstance();
          }
          removeAllRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 7;
        onChanged();;
        return removeAllRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder> getAvailableServersRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public boolean hasGetAvailableServersRequest() {
        return requestAPICase_ == 42;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest getGetAvailableServersRequest() {
        if (getAvailableServersRequestBuilder_ == null) {
          if (requestAPICase_ == 42) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 42) {
            return getAvailableServersRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public Builder setGetAvailableServersRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest value) {
        if (getAvailableServersRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          getAvailableServersRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 42;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public Builder setGetAvailableServersRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder builderForValue) {
        if (getAvailableServersRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          getAvailableServersRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 42;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public Builder mergeGetAvailableServersRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest value) {
        if (getAvailableServersRequestBuilder_ == null) {
          if (requestAPICase_ == 42
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
                  .getDefaultInstance()) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 42) {
            getAvailableServersRequestBuilder_.mergeFrom(value);
          }
          getAvailableServersRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 42;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public Builder clearGetAvailableServersRequest() {
        if (getAvailableServersRequestBuilder_ == null) {
          if (requestAPICase_ == 42) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 42) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          getAvailableServersRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder getGetAvailableServersRequestBuilder() {
        return getGetAvailableServersRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder getGetAvailableServersRequestOrBuilder() {
        if ((requestAPICase_ == 42) && (getAvailableServersRequestBuilder_ != null)) {
          return getAvailableServersRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 42) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest getAvailableServersRequest = 42;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder> getGetAvailableServersRequestFieldBuilder() {
        if (getAvailableServersRequestBuilder_ == null) {
          if (!(requestAPICase_ == 42)) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
                    .getDefaultInstance();
          }
          getAvailableServersRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 42;
        onChanged();;
        return getAvailableServersRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequestOrBuilder> getRegionNamesRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public boolean hasGetRegionNamesRequest() {
        return requestAPICase_ == 43;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest getGetRegionNamesRequest() {
        if (getRegionNamesRequestBuilder_ == null) {
          if (requestAPICase_ == 43) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 43) {
            return getRegionNamesRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public Builder setGetRegionNamesRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest value) {
        if (getRegionNamesRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          getRegionNamesRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 43;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public Builder setGetRegionNamesRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest.Builder builderForValue) {
        if (getRegionNamesRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          getRegionNamesRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 43;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public Builder mergeGetRegionNamesRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest value) {
        if (getRegionNamesRequestBuilder_ == null) {
          if (requestAPICase_ == 43
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
                  .getDefaultInstance()) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 43) {
            getRegionNamesRequestBuilder_.mergeFrom(value);
          }
          getRegionNamesRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 43;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public Builder clearGetRegionNamesRequest() {
        if (getRegionNamesRequestBuilder_ == null) {
          if (requestAPICase_ == 43) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 43) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          getRegionNamesRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest.Builder getGetRegionNamesRequestBuilder() {
        return getGetRegionNamesRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequestOrBuilder getGetRegionNamesRequestOrBuilder() {
        if ((requestAPICase_ == 43) && (getRegionNamesRequestBuilder_ != null)) {
          return getRegionNamesRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 43) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest getRegionNamesRequest = 43;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequestOrBuilder> getGetRegionNamesRequestFieldBuilder() {
        if (getRegionNamesRequestBuilder_ == null) {
          if (!(requestAPICase_ == 43)) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest
                    .getDefaultInstance();
          }
          getRegionNamesRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 43;
        onChanged();;
        return getRegionNamesRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequestOrBuilder> getRegionRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public boolean hasGetRegionRequest() {
        return requestAPICase_ == 44;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest getGetRegionRequest() {
        if (getRegionRequestBuilder_ == null) {
          if (requestAPICase_ == 44) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 44) {
            return getRegionRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public Builder setGetRegionRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest value) {
        if (getRegionRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          getRegionRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 44;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public Builder setGetRegionRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest.Builder builderForValue) {
        if (getRegionRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          getRegionRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 44;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public Builder mergeGetRegionRequest(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest value) {
        if (getRegionRequestBuilder_ == null) {
          if (requestAPICase_ == 44
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
                  .getDefaultInstance()) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 44) {
            getRegionRequestBuilder_.mergeFrom(value);
          }
          getRegionRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 44;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public Builder clearGetRegionRequest() {
        if (getRegionRequestBuilder_ == null) {
          if (requestAPICase_ == 44) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 44) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          getRegionRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest.Builder getGetRegionRequestBuilder() {
        return getGetRegionRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequestOrBuilder getGetRegionRequestOrBuilder() {
        if ((requestAPICase_ == 44) && (getRegionRequestBuilder_ != null)) {
          return getRegionRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 44) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionRequest getRegionRequest = 44;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequestOrBuilder> getGetRegionRequestFieldBuilder() {
        if (getRegionRequestBuilder_ == null) {
          if (!(requestAPICase_ == 44)) {
            requestAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest
                .getDefaultInstance();
          }
          getRegionRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 44;
        onChanged();;
        return getRegionRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequestOrBuilder> authenticationRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public boolean hasAuthenticationRequest() {
        return requestAPICase_ == 100;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest getAuthenticationRequest() {
        if (authenticationRequestBuilder_ == null) {
          if (requestAPICase_ == 100) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 100) {
            return authenticationRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public Builder setAuthenticationRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest value) {
        if (authenticationRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          authenticationRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 100;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public Builder setAuthenticationRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest.Builder builderForValue) {
        if (authenticationRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          authenticationRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 100;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public Builder mergeAuthenticationRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest value) {
        if (authenticationRequestBuilder_ == null) {
          if (requestAPICase_ == 100
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
                  .getDefaultInstance()) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 100) {
            authenticationRequestBuilder_.mergeFrom(value);
          }
          authenticationRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 100;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public Builder clearAuthenticationRequest() {
        if (authenticationRequestBuilder_ == null) {
          if (requestAPICase_ == 100) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 100) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          authenticationRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest.Builder getAuthenticationRequestBuilder() {
        return getAuthenticationRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequestOrBuilder getAuthenticationRequestOrBuilder() {
        if ((requestAPICase_ == 100) && (authenticationRequestBuilder_ != null)) {
          return authenticationRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 100) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationRequest authenticationRequest = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequestOrBuilder> getAuthenticationRequestFieldBuilder() {
        if (authenticationRequestBuilder_ == null) {
          if (!(requestAPICase_ == 100)) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest
                    .getDefaultInstance();
          }
          authenticationRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 100;
        onChanged();;
        return authenticationRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequestOrBuilder> handshakeRequestBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public boolean hasHandshakeRequest() {
        return requestAPICase_ == 101;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest getHandshakeRequest() {
        if (handshakeRequestBuilder_ == null) {
          if (requestAPICase_ == 101) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
              .getDefaultInstance();
        } else {
          if (requestAPICase_ == 101) {
            return handshakeRequestBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public Builder setHandshakeRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest value) {
        if (handshakeRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestAPI_ = value;
          onChanged();
        } else {
          handshakeRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 101;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public Builder setHandshakeRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest.Builder builderForValue) {
        if (handshakeRequestBuilder_ == null) {
          requestAPI_ = builderForValue.build();
          onChanged();
        } else {
          handshakeRequestBuilder_.setMessage(builderForValue.build());
        }
        requestAPICase_ = 101;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public Builder mergeHandshakeRequest(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest value) {
        if (handshakeRequestBuilder_ == null) {
          if (requestAPICase_ == 101
              && requestAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
                  .getDefaultInstance()) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            requestAPI_ = value;
          }
          onChanged();
        } else {
          if (requestAPICase_ == 101) {
            handshakeRequestBuilder_.mergeFrom(value);
          }
          handshakeRequestBuilder_.setMessage(value);
        }
        requestAPICase_ = 101;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public Builder clearHandshakeRequest() {
        if (handshakeRequestBuilder_ == null) {
          if (requestAPICase_ == 101) {
            requestAPICase_ = 0;
            requestAPI_ = null;
            onChanged();
          }
        } else {
          if (requestAPICase_ == 101) {
            requestAPICase_ = 0;
            requestAPI_ = null;
          }
          handshakeRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest.Builder getHandshakeRequestBuilder() {
        return getHandshakeRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequestOrBuilder getHandshakeRequestOrBuilder() {
        if ((requestAPICase_ == 101) && (handshakeRequestBuilder_ != null)) {
          return handshakeRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestAPICase_ == 101) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeRequest handshakeRequest = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequestOrBuilder> getHandshakeRequestFieldBuilder() {
        if (handshakeRequestBuilder_ == null) {
          if (!(requestAPICase_ == 101)) {
            requestAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest
                    .getDefaultInstance();
          }
          handshakeRequestBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequestOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeRequest) requestAPI_,
                  getParentForChildren(), isClean());
          requestAPI_ = null;
        }
        requestAPICase_ = 101;
        onChanged();;
        return handshakeRequestBuilder_;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.geode.internal.protocol.protobuf.v1.Request)
    }

    // @@protoc_insertion_point(class_scope:org.apache.geode.internal.protocol.protobuf.v1.Request)
    private static final org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE =
          new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request();
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request> PARSER =
        new com.google.protobuf.AbstractParser<Request>() {
          public Request parsePartialFrom(com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Request(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.geode.internal.protocol.protobuf.v1.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
     */
    boolean hasPutResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse getPutResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponseOrBuilder getPutResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
     */
    boolean hasGetResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse getGetResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponseOrBuilder getGetResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
     */
    boolean hasPutAllResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse getPutAllResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponseOrBuilder getPutAllResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
     */
    boolean hasGetAllResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse getGetAllResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponseOrBuilder getGetAllResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
     */
    boolean hasRemoveResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse getRemoveResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponseOrBuilder getRemoveResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
     */
    boolean hasRemoveAllResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse getRemoveAllResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponseOrBuilder getRemoveAllResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
     */
    boolean hasErrorResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse getErrorResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder getErrorResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
     */
    boolean hasGetAvailableServersResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse getGetAvailableServersResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder getGetAvailableServersResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
     */
    boolean hasGetRegionNamesResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse getGetRegionNamesResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponseOrBuilder getGetRegionNamesResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
     */
    boolean hasGetRegionResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse getGetRegionResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponseOrBuilder getGetRegionResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
     */
    boolean hasAuthenticationResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse getAuthenticationResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponseOrBuilder getAuthenticationResponseOrBuilder();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
     */
    boolean hasHandshakeResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse getHandshakeResponse();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponseOrBuilder getHandshakeResponseOrBuilder();

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.ResponseAPICase getResponseAPICase();
  }
  /**
   * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.Response}
   */
  public static final class Response extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.geode.internal.protocol.protobuf.v1.Response)
      ResponseOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Response() {}

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Response(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 2) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 2;
              break;
            }
            case 26: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 3) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 3;
              break;
            }
            case 34: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 4) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 4;
              break;
            }
            case 42: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 5) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 5;
              break;
            }
            case 50: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 6) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 6;
              break;
            }
            case 58: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 7) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 7;
              break;
            }
            case 106: {
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 13) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 13;
              break;
            }
            case 338: {
              org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 42) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 42;
              break;
            }
            case 346: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 43) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 43;
              break;
            }
            case 354: {
              org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 44) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 44;
              break;
            }
            case 802: {
              org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 100) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 100;
              break;
            }
            case 810: {
              org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse.Builder subBuilder =
                  null;
              if (responseAPICase_ == 101) {
                subBuilder =
                    ((org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_)
                        .toBuilder();
              }
              responseAPI_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
                      .parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(
                    (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_);
                responseAPI_ = subBuilder.buildPartial();
              }
              responseAPICase_ = 101;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.class,
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder.class);
    }

    private int responseAPICase_ = 0;
    private java.lang.Object responseAPI_;

    public enum ResponseAPICase implements com.google.protobuf.Internal.EnumLite {
      PUTRESPONSE(2), GETRESPONSE(3), PUTALLRESPONSE(4), GETALLRESPONSE(5), REMOVERESPONSE(
          6), REMOVEALLRESPONSE(7), ERRORRESPONSE(13), GETAVAILABLESERVERSRESPONSE(
              42), GETREGIONNAMESRESPONSE(43), GETREGIONRESPONSE(
                  44), AUTHENTICATIONRESPONSE(100), HANDSHAKERESPONSE(101), RESPONSEAPI_NOT_SET(0);
      private final int value;

      private ResponseAPICase(int value) {
        this.value = value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseAPICase valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseAPICase forNumber(int value) {
        switch (value) {
          case 2:
            return PUTRESPONSE;
          case 3:
            return GETRESPONSE;
          case 4:
            return PUTALLRESPONSE;
          case 5:
            return GETALLRESPONSE;
          case 6:
            return REMOVERESPONSE;
          case 7:
            return REMOVEALLRESPONSE;
          case 13:
            return ERRORRESPONSE;
          case 42:
            return GETAVAILABLESERVERSRESPONSE;
          case 43:
            return GETREGIONNAMESRESPONSE;
          case 44:
            return GETREGIONRESPONSE;
          case 100:
            return AUTHENTICATIONRESPONSE;
          case 101:
            return HANDSHAKERESPONSE;
          case 0:
            return RESPONSEAPI_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public ResponseAPICase getResponseAPICase() {
      return ResponseAPICase.forNumber(responseAPICase_);
    }

    public static final int PUTRESPONSE_FIELD_NUMBER = 2;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
     */
    public boolean hasPutResponse() {
      return responseAPICase_ == 2;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse getPutResponse() {
      if (responseAPICase_ == 2) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponseOrBuilder getPutResponseOrBuilder() {
      if (responseAPICase_ == 2) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
          .getDefaultInstance();
    }

    public static final int GETRESPONSE_FIELD_NUMBER = 3;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
     */
    public boolean hasGetResponse() {
      return responseAPICase_ == 3;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse getGetResponse() {
      if (responseAPICase_ == 3) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponseOrBuilder getGetResponseOrBuilder() {
      if (responseAPICase_ == 3) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
          .getDefaultInstance();
    }

    public static final int PUTALLRESPONSE_FIELD_NUMBER = 4;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
     */
    public boolean hasPutAllResponse() {
      return responseAPICase_ == 4;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse getPutAllResponse() {
      if (responseAPICase_ == 4) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponseOrBuilder getPutAllResponseOrBuilder() {
      if (responseAPICase_ == 4) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
          .getDefaultInstance();
    }

    public static final int GETALLRESPONSE_FIELD_NUMBER = 5;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
     */
    public boolean hasGetAllResponse() {
      return responseAPICase_ == 5;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse getGetAllResponse() {
      if (responseAPICase_ == 5) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponseOrBuilder getGetAllResponseOrBuilder() {
      if (responseAPICase_ == 5) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
          .getDefaultInstance();
    }

    public static final int REMOVERESPONSE_FIELD_NUMBER = 6;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
     */
    public boolean hasRemoveResponse() {
      return responseAPICase_ == 6;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse getRemoveResponse() {
      if (responseAPICase_ == 6) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponseOrBuilder getRemoveResponseOrBuilder() {
      if (responseAPICase_ == 6) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
          .getDefaultInstance();
    }

    public static final int REMOVEALLRESPONSE_FIELD_NUMBER = 7;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
     */
    public boolean hasRemoveAllResponse() {
      return responseAPICase_ == 7;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse getRemoveAllResponse() {
      if (responseAPICase_ == 7) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponseOrBuilder getRemoveAllResponseOrBuilder() {
      if (responseAPICase_ == 7) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
          .getDefaultInstance();
    }

    public static final int ERRORRESPONSE_FIELD_NUMBER = 13;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
     */
    public boolean hasErrorResponse() {
      return responseAPICase_ == 13;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse getErrorResponse() {
      if (responseAPICase_ == 13) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder getErrorResponseOrBuilder() {
      if (responseAPICase_ == 13) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
          .getDefaultInstance();
    }

    public static final int GETAVAILABLESERVERSRESPONSE_FIELD_NUMBER = 42;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
     */
    public boolean hasGetAvailableServersResponse() {
      return responseAPICase_ == 42;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse getGetAvailableServersResponse() {
      if (responseAPICase_ == 42) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder getGetAvailableServersResponseOrBuilder() {
      if (responseAPICase_ == 42) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
          .getDefaultInstance();
    }

    public static final int GETREGIONNAMESRESPONSE_FIELD_NUMBER = 43;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
     */
    public boolean hasGetRegionNamesResponse() {
      return responseAPICase_ == 43;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse getGetRegionNamesResponse() {
      if (responseAPICase_ == 43) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponseOrBuilder getGetRegionNamesResponseOrBuilder() {
      if (responseAPICase_ == 43) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
          .getDefaultInstance();
    }

    public static final int GETREGIONRESPONSE_FIELD_NUMBER = 44;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
     */
    public boolean hasGetRegionResponse() {
      return responseAPICase_ == 44;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse getGetRegionResponse() {
      if (responseAPICase_ == 44) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponseOrBuilder getGetRegionResponseOrBuilder() {
      if (responseAPICase_ == 44) {
        return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
          .getDefaultInstance();
    }

    public static final int AUTHENTICATIONRESPONSE_FIELD_NUMBER = 100;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
     */
    public boolean hasAuthenticationResponse() {
      return responseAPICase_ == 100;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse getAuthenticationResponse() {
      if (responseAPICase_ == 100) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponseOrBuilder getAuthenticationResponseOrBuilder() {
      if (responseAPICase_ == 100) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
          .getDefaultInstance();
    }

    public static final int HANDSHAKERESPONSE_FIELD_NUMBER = 101;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
     */
    public boolean hasHandshakeResponse() {
      return responseAPICase_ == 101;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse getHandshakeResponse() {
      if (responseAPICase_ == 101) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
          .getDefaultInstance();
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponseOrBuilder getHandshakeResponseOrBuilder() {
      if (responseAPICase_ == 101) {
        return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_;
      }
      return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
          .getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (responseAPICase_ == 2) {
        output.writeMessage(2,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_);
      }
      if (responseAPICase_ == 3) {
        output.writeMessage(3,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_);
      }
      if (responseAPICase_ == 4) {
        output.writeMessage(4,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_);
      }
      if (responseAPICase_ == 5) {
        output.writeMessage(5,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_);
      }
      if (responseAPICase_ == 6) {
        output.writeMessage(6,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_);
      }
      if (responseAPICase_ == 7) {
        output.writeMessage(7,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_);
      }
      if (responseAPICase_ == 13) {
        output.writeMessage(13,
            (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_);
      }
      if (responseAPICase_ == 42) {
        output.writeMessage(42,
            (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_);
      }
      if (responseAPICase_ == 43) {
        output.writeMessage(43,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_);
      }
      if (responseAPICase_ == 44) {
        output.writeMessage(44,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_);
      }
      if (responseAPICase_ == 100) {
        output.writeMessage(100,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_);
      }
      if (responseAPICase_ == 101) {
        output.writeMessage(101,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (responseAPICase_ == 2) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_);
      }
      if (responseAPICase_ == 3) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_);
      }
      if (responseAPICase_ == 4) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(4,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_);
      }
      if (responseAPICase_ == 5) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_);
      }
      if (responseAPICase_ == 6) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_);
      }
      if (responseAPICase_ == 7) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_);
      }
      if (responseAPICase_ == 13) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(13,
            (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_);
      }
      if (responseAPICase_ == 42) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(42,
            (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_);
      }
      if (responseAPICase_ == 43) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(43,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_);
      }
      if (responseAPICase_ == 44) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(44,
            (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_);
      }
      if (responseAPICase_ == 100) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(100,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_);
      }
      if (responseAPICase_ == 101) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(101,
            (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response)) {
        return super.equals(obj);
      }
      org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response other =
          (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) obj;

      boolean result = true;
      result = result && getResponseAPICase().equals(other.getResponseAPICase());
      if (!result)
        return false;
      switch (responseAPICase_) {
        case 2:
          result = result && getPutResponse().equals(other.getPutResponse());
          break;
        case 3:
          result = result && getGetResponse().equals(other.getGetResponse());
          break;
        case 4:
          result = result && getPutAllResponse().equals(other.getPutAllResponse());
          break;
        case 5:
          result = result && getGetAllResponse().equals(other.getGetAllResponse());
          break;
        case 6:
          result = result && getRemoveResponse().equals(other.getRemoveResponse());
          break;
        case 7:
          result = result && getRemoveAllResponse().equals(other.getRemoveAllResponse());
          break;
        case 13:
          result = result && getErrorResponse().equals(other.getErrorResponse());
          break;
        case 42:
          result = result
              && getGetAvailableServersResponse().equals(other.getGetAvailableServersResponse());
          break;
        case 43:
          result = result && getGetRegionNamesResponse().equals(other.getGetRegionNamesResponse());
          break;
        case 44:
          result = result && getGetRegionResponse().equals(other.getGetRegionResponse());
          break;
        case 100:
          result = result && getAuthenticationResponse().equals(other.getAuthenticationResponse());
          break;
        case 101:
          result = result && getHandshakeResponse().equals(other.getHandshakeResponse());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (responseAPICase_) {
        case 2:
          hash = (37 * hash) + PUTRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getPutResponse().hashCode();
          break;
        case 3:
          hash = (37 * hash) + GETRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetResponse().hashCode();
          break;
        case 4:
          hash = (37 * hash) + PUTALLRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getPutAllResponse().hashCode();
          break;
        case 5:
          hash = (37 * hash) + GETALLRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetAllResponse().hashCode();
          break;
        case 6:
          hash = (37 * hash) + REMOVERESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getRemoveResponse().hashCode();
          break;
        case 7:
          hash = (37 * hash) + REMOVEALLRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getRemoveAllResponse().hashCode();
          break;
        case 13:
          hash = (37 * hash) + ERRORRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getErrorResponse().hashCode();
          break;
        case 42:
          hash = (37 * hash) + GETAVAILABLESERVERSRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetAvailableServersResponse().hashCode();
          break;
        case 43:
          hash = (37 * hash) + GETREGIONNAMESRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetRegionNamesResponse().hashCode();
          break;
        case 44:
          hash = (37 * hash) + GETREGIONRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getGetRegionResponse().hashCode();
          break;
        case 100:
          hash = (37 * hash) + AUTHENTICATIONRESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getAuthenticationResponse().hashCode();
          break;
        case 101:
          hash = (37 * hash) + HANDSHAKERESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getHandshakeResponse().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.Response}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.geode.internal.protocol.protobuf.v1.Response)
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.class,
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.Builder.class);
      }

      // Construct using
      // org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        responseAPICase_ = 0;
        responseAPI_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_descriptor;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response getDefaultInstanceForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
            .getDefaultInstance();
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response build() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response buildPartial() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response result =
            new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response(this);
        if (responseAPICase_ == 2) {
          if (putResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = putResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 3) {
          if (getResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = getResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 4) {
          if (putAllResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = putAllResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 5) {
          if (getAllResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = getAllResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 6) {
          if (removeResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = removeResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 7) {
          if (removeAllResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = removeAllResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 13) {
          if (errorResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = errorResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 42) {
          if (getAvailableServersResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = getAvailableServersResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 43) {
          if (getRegionNamesResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = getRegionNamesResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 44) {
          if (getRegionResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = getRegionResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 100) {
          if (authenticationResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = authenticationResponseBuilder_.build();
          }
        }
        if (responseAPICase_ == 101) {
          if (handshakeResponseBuilder_ == null) {
            result.responseAPI_ = responseAPI_;
          } else {
            result.responseAPI_ = handshakeResponseBuilder_.build();
          }
        }
        result.responseAPICase_ = responseAPICase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) {
          return mergeFrom(
              (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response other) {
        if (other == org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response
            .getDefaultInstance())
          return this;
        switch (other.getResponseAPICase()) {
          case PUTRESPONSE: {
            mergePutResponse(other.getPutResponse());
            break;
          }
          case GETRESPONSE: {
            mergeGetResponse(other.getGetResponse());
            break;
          }
          case PUTALLRESPONSE: {
            mergePutAllResponse(other.getPutAllResponse());
            break;
          }
          case GETALLRESPONSE: {
            mergeGetAllResponse(other.getGetAllResponse());
            break;
          }
          case REMOVERESPONSE: {
            mergeRemoveResponse(other.getRemoveResponse());
            break;
          }
          case REMOVEALLRESPONSE: {
            mergeRemoveAllResponse(other.getRemoveAllResponse());
            break;
          }
          case ERRORRESPONSE: {
            mergeErrorResponse(other.getErrorResponse());
            break;
          }
          case GETAVAILABLESERVERSRESPONSE: {
            mergeGetAvailableServersResponse(other.getGetAvailableServersResponse());
            break;
          }
          case GETREGIONNAMESRESPONSE: {
            mergeGetRegionNamesResponse(other.getGetRegionNamesResponse());
            break;
          }
          case GETREGIONRESPONSE: {
            mergeGetRegionResponse(other.getGetRegionResponse());
            break;
          }
          case AUTHENTICATIONRESPONSE: {
            mergeAuthenticationResponse(other.getAuthenticationResponse());
            break;
          }
          case HANDSHAKERESPONSE: {
            mergeHandshakeResponse(other.getHandshakeResponse());
            break;
          }
          case RESPONSEAPI_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response) e
              .getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int responseAPICase_ = 0;
      private java.lang.Object responseAPI_;

      public ResponseAPICase getResponseAPICase() {
        return ResponseAPICase.forNumber(responseAPICase_);
      }

      public Builder clearResponseAPI() {
        responseAPICase_ = 0;
        responseAPI_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponseOrBuilder> putResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public boolean hasPutResponse() {
        return responseAPICase_ == 2;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse getPutResponse() {
        if (putResponseBuilder_ == null) {
          if (responseAPICase_ == 2) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 2) {
            return putResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public Builder setPutResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse value) {
        if (putResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          putResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public Builder setPutResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.Builder builderForValue) {
        if (putResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          putResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public Builder mergePutResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse value) {
        if (putResponseBuilder_ == null) {
          if (responseAPICase_ == 2
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
                  .getDefaultInstance()) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 2) {
            putResponseBuilder_.mergeFrom(value);
          }
          putResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 2;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public Builder clearPutResponse() {
        if (putResponseBuilder_ == null) {
          if (responseAPICase_ == 2) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 2) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          putResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.Builder getPutResponseBuilder() {
        return getPutResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponseOrBuilder getPutResponseOrBuilder() {
        if ((responseAPICase_ == 2) && (putResponseBuilder_ != null)) {
          return putResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 2) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutResponse putResponse = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponseOrBuilder> getPutResponseFieldBuilder() {
        if (putResponseBuilder_ == null) {
          if (!(responseAPICase_ == 2)) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse
                .getDefaultInstance();
          }
          putResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 2;
        onChanged();;
        return putResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponseOrBuilder> getResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public boolean hasGetResponse() {
        return responseAPICase_ == 3;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse getGetResponse() {
        if (getResponseBuilder_ == null) {
          if (responseAPICase_ == 3) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 3) {
            return getResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public Builder setGetResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse value) {
        if (getResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          getResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 3;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public Builder setGetResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.Builder builderForValue) {
        if (getResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          getResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 3;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public Builder mergeGetResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse value) {
        if (getResponseBuilder_ == null) {
          if (responseAPICase_ == 3
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
                  .getDefaultInstance()) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 3) {
            getResponseBuilder_.mergeFrom(value);
          }
          getResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 3;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public Builder clearGetResponse() {
        if (getResponseBuilder_ == null) {
          if (responseAPICase_ == 3) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 3) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          getResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.Builder getGetResponseBuilder() {
        return getGetResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponseOrBuilder getGetResponseOrBuilder() {
        if ((responseAPICase_ == 3) && (getResponseBuilder_ != null)) {
          return getResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 3) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetResponse getResponse = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponseOrBuilder> getGetResponseFieldBuilder() {
        if (getResponseBuilder_ == null) {
          if (!(responseAPICase_ == 3)) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse
                .getDefaultInstance();
          }
          getResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 3;
        onChanged();;
        return getResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponseOrBuilder> putAllResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public boolean hasPutAllResponse() {
        return responseAPICase_ == 4;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse getPutAllResponse() {
        if (putAllResponseBuilder_ == null) {
          if (responseAPICase_ == 4) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 4) {
            return putAllResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public Builder setPutAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse value) {
        if (putAllResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          putAllResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 4;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public Builder setPutAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.Builder builderForValue) {
        if (putAllResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          putAllResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 4;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public Builder mergePutAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse value) {
        if (putAllResponseBuilder_ == null) {
          if (responseAPICase_ == 4
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
                  .getDefaultInstance()) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 4) {
            putAllResponseBuilder_.mergeFrom(value);
          }
          putAllResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 4;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public Builder clearPutAllResponse() {
        if (putAllResponseBuilder_ == null) {
          if (responseAPICase_ == 4) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 4) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          putAllResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.Builder getPutAllResponseBuilder() {
        return getPutAllResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponseOrBuilder getPutAllResponseOrBuilder() {
        if ((responseAPICase_ == 4) && (putAllResponseBuilder_ != null)) {
          return putAllResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 4) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse putAllResponse = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponseOrBuilder> getPutAllResponseFieldBuilder() {
        if (putAllResponseBuilder_ == null) {
          if (!(responseAPICase_ == 4)) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse
                .getDefaultInstance();
          }
          putAllResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.PutAllResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 4;
        onChanged();;
        return putAllResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponseOrBuilder> getAllResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public boolean hasGetAllResponse() {
        return responseAPICase_ == 5;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse getGetAllResponse() {
        if (getAllResponseBuilder_ == null) {
          if (responseAPICase_ == 5) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 5) {
            return getAllResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public Builder setGetAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse value) {
        if (getAllResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          getAllResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 5;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public Builder setGetAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.Builder builderForValue) {
        if (getAllResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          getAllResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 5;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public Builder mergeGetAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse value) {
        if (getAllResponseBuilder_ == null) {
          if (responseAPICase_ == 5
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
                  .getDefaultInstance()) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 5) {
            getAllResponseBuilder_.mergeFrom(value);
          }
          getAllResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 5;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public Builder clearGetAllResponse() {
        if (getAllResponseBuilder_ == null) {
          if (responseAPICase_ == 5) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 5) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          getAllResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.Builder getGetAllResponseBuilder() {
        return getGetAllResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponseOrBuilder getGetAllResponseOrBuilder() {
        if ((responseAPICase_ == 5) && (getAllResponseBuilder_ != null)) {
          return getAllResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 5) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse getAllResponse = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponseOrBuilder> getGetAllResponseFieldBuilder() {
        if (getAllResponseBuilder_ == null) {
          if (!(responseAPICase_ == 5)) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse
                .getDefaultInstance();
          }
          getAllResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetAllResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 5;
        onChanged();;
        return getAllResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponseOrBuilder> removeResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public boolean hasRemoveResponse() {
        return responseAPICase_ == 6;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse getRemoveResponse() {
        if (removeResponseBuilder_ == null) {
          if (responseAPICase_ == 6) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 6) {
            return removeResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public Builder setRemoveResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse value) {
        if (removeResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          removeResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 6;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public Builder setRemoveResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.Builder builderForValue) {
        if (removeResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          removeResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 6;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public Builder mergeRemoveResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse value) {
        if (removeResponseBuilder_ == null) {
          if (responseAPICase_ == 6
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
                  .getDefaultInstance()) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
                .newBuilder(
                    (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_)
                .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 6) {
            removeResponseBuilder_.mergeFrom(value);
          }
          removeResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 6;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public Builder clearRemoveResponse() {
        if (removeResponseBuilder_ == null) {
          if (responseAPICase_ == 6) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 6) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          removeResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.Builder getRemoveResponseBuilder() {
        return getRemoveResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponseOrBuilder getRemoveResponseOrBuilder() {
        if ((responseAPICase_ == 6) && (removeResponseBuilder_ != null)) {
          return removeResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 6) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse removeResponse = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponseOrBuilder> getRemoveResponseFieldBuilder() {
        if (removeResponseBuilder_ == null) {
          if (!(responseAPICase_ == 6)) {
            responseAPI_ = org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse
                .getDefaultInstance();
          }
          removeResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 6;
        onChanged();;
        return removeResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponseOrBuilder> removeAllResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public boolean hasRemoveAllResponse() {
        return responseAPICase_ == 7;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse getRemoveAllResponse() {
        if (removeAllResponseBuilder_ == null) {
          if (responseAPICase_ == 7) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 7) {
            return removeAllResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public Builder setRemoveAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse value) {
        if (removeAllResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          removeAllResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 7;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public Builder setRemoveAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse.Builder builderForValue) {
        if (removeAllResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          removeAllResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 7;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public Builder mergeRemoveAllResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse value) {
        if (removeAllResponseBuilder_ == null) {
          if (responseAPICase_ == 7
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 7) {
            removeAllResponseBuilder_.mergeFrom(value);
          }
          removeAllResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 7;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public Builder clearRemoveAllResponse() {
        if (removeAllResponseBuilder_ == null) {
          if (responseAPICase_ == 7) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 7) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          removeAllResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse.Builder getRemoveAllResponseBuilder() {
        return getRemoveAllResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponseOrBuilder getRemoveAllResponseOrBuilder() {
        if ((responseAPICase_ == 7) && (removeAllResponseBuilder_ != null)) {
          return removeAllResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 7) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.RemoveAllResponse removeAllResponse = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponseOrBuilder> getRemoveAllResponseFieldBuilder() {
        if (removeAllResponseBuilder_ == null) {
          if (!(responseAPICase_ == 7)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse
                    .getDefaultInstance();
          }
          removeAllResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.RemoveAllResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 7;
        onChanged();;
        return removeAllResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder> errorResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public boolean hasErrorResponse() {
        return responseAPICase_ == 13;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse getErrorResponse() {
        if (errorResponseBuilder_ == null) {
          if (responseAPICase_ == 13) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 13) {
            return errorResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public Builder setErrorResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse value) {
        if (errorResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          errorResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 13;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public Builder setErrorResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder builderForValue) {
        if (errorResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          errorResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 13;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public Builder mergeErrorResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse value) {
        if (errorResponseBuilder_ == null) {
          if (responseAPICase_ == 13
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 13) {
            errorResponseBuilder_.mergeFrom(value);
          }
          errorResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 13;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public Builder clearErrorResponse() {
        if (errorResponseBuilder_ == null) {
          if (responseAPICase_ == 13) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 13) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          errorResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder getErrorResponseBuilder() {
        return getErrorResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder getErrorResponseOrBuilder() {
        if ((responseAPICase_ == 13) && (errorResponseBuilder_ != null)) {
          return errorResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 13) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse errorResponse = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder> getErrorResponseFieldBuilder() {
        if (errorResponseBuilder_ == null) {
          if (!(responseAPICase_ == 13)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
                    .getDefaultInstance();
          }
          errorResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 13;
        onChanged();;
        return errorResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder> getAvailableServersResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public boolean hasGetAvailableServersResponse() {
        return responseAPICase_ == 42;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse getGetAvailableServersResponse() {
        if (getAvailableServersResponseBuilder_ == null) {
          if (responseAPICase_ == 42) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 42) {
            return getAvailableServersResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public Builder setGetAvailableServersResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse value) {
        if (getAvailableServersResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          getAvailableServersResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 42;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public Builder setGetAvailableServersResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder builderForValue) {
        if (getAvailableServersResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          getAvailableServersResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 42;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public Builder mergeGetAvailableServersResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse value) {
        if (getAvailableServersResponseBuilder_ == null) {
          if (responseAPICase_ == 42
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 42) {
            getAvailableServersResponseBuilder_.mergeFrom(value);
          }
          getAvailableServersResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 42;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public Builder clearGetAvailableServersResponse() {
        if (getAvailableServersResponseBuilder_ == null) {
          if (responseAPICase_ == 42) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 42) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          getAvailableServersResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder getGetAvailableServersResponseBuilder() {
        return getGetAvailableServersResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder getGetAvailableServersResponseOrBuilder() {
        if ((responseAPICase_ == 42) && (getAvailableServersResponseBuilder_ != null)) {
          return getAvailableServersResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 42) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse getAvailableServersResponse = 42;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder> getGetAvailableServersResponseFieldBuilder() {
        if (getAvailableServersResponseBuilder_ == null) {
          if (!(responseAPICase_ == 42)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
                    .getDefaultInstance();
          }
          getAvailableServersResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 42;
        onChanged();;
        return getAvailableServersResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponseOrBuilder> getRegionNamesResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public boolean hasGetRegionNamesResponse() {
        return responseAPICase_ == 43;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse getGetRegionNamesResponse() {
        if (getRegionNamesResponseBuilder_ == null) {
          if (responseAPICase_ == 43) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 43) {
            return getRegionNamesResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public Builder setGetRegionNamesResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse value) {
        if (getRegionNamesResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          getRegionNamesResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 43;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public Builder setGetRegionNamesResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse.Builder builderForValue) {
        if (getRegionNamesResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          getRegionNamesResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 43;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public Builder mergeGetRegionNamesResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse value) {
        if (getRegionNamesResponseBuilder_ == null) {
          if (responseAPICase_ == 43
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 43) {
            getRegionNamesResponseBuilder_.mergeFrom(value);
          }
          getRegionNamesResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 43;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public Builder clearGetRegionNamesResponse() {
        if (getRegionNamesResponseBuilder_ == null) {
          if (responseAPICase_ == 43) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 43) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          getRegionNamesResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse.Builder getGetRegionNamesResponseBuilder() {
        return getGetRegionNamesResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponseOrBuilder getGetRegionNamesResponseOrBuilder() {
        if ((responseAPICase_ == 43) && (getRegionNamesResponseBuilder_ != null)) {
          return getRegionNamesResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 43) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse getRegionNamesResponse = 43;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponseOrBuilder> getGetRegionNamesResponseFieldBuilder() {
        if (getRegionNamesResponseBuilder_ == null) {
          if (!(responseAPICase_ == 43)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse
                    .getDefaultInstance();
          }
          getRegionNamesResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionNamesResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 43;
        onChanged();;
        return getRegionNamesResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponseOrBuilder> getRegionResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public boolean hasGetRegionResponse() {
        return responseAPICase_ == 44;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse getGetRegionResponse() {
        if (getRegionResponseBuilder_ == null) {
          if (responseAPICase_ == 44) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 44) {
            return getRegionResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public Builder setGetRegionResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse value) {
        if (getRegionResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          getRegionResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 44;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public Builder setGetRegionResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse.Builder builderForValue) {
        if (getRegionResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          getRegionResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 44;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public Builder mergeGetRegionResponse(
          org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse value) {
        if (getRegionResponseBuilder_ == null) {
          if (responseAPICase_ == 44
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 44) {
            getRegionResponseBuilder_.mergeFrom(value);
          }
          getRegionResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 44;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public Builder clearGetRegionResponse() {
        if (getRegionResponseBuilder_ == null) {
          if (responseAPICase_ == 44) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 44) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          getRegionResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse.Builder getGetRegionResponseBuilder() {
        return getGetRegionResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponseOrBuilder getGetRegionResponseOrBuilder() {
        if ((responseAPICase_ == 44) && (getRegionResponseBuilder_ != null)) {
          return getRegionResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 44) {
            return (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.GetRegionResponse getRegionResponse = 44;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponseOrBuilder> getGetRegionResponseFieldBuilder() {
        if (getRegionResponseBuilder_ == null) {
          if (!(responseAPICase_ == 44)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse
                    .getDefaultInstance();
          }
          getRegionResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.GetRegionResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 44;
        onChanged();;
        return getRegionResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponseOrBuilder> authenticationResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public boolean hasAuthenticationResponse() {
        return responseAPICase_ == 100;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse getAuthenticationResponse() {
        if (authenticationResponseBuilder_ == null) {
          if (responseAPICase_ == 100) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 100) {
            return authenticationResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public Builder setAuthenticationResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse value) {
        if (authenticationResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          authenticationResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 100;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public Builder setAuthenticationResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse.Builder builderForValue) {
        if (authenticationResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          authenticationResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 100;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public Builder mergeAuthenticationResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse value) {
        if (authenticationResponseBuilder_ == null) {
          if (responseAPICase_ == 100
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 100) {
            authenticationResponseBuilder_.mergeFrom(value);
          }
          authenticationResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 100;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public Builder clearAuthenticationResponse() {
        if (authenticationResponseBuilder_ == null) {
          if (responseAPICase_ == 100) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 100) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          authenticationResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse.Builder getAuthenticationResponseBuilder() {
        return getAuthenticationResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponseOrBuilder getAuthenticationResponseOrBuilder() {
        if ((responseAPICase_ == 100) && (authenticationResponseBuilder_ != null)) {
          return authenticationResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 100) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.AuthenticationResponse authenticationResponse = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponseOrBuilder> getAuthenticationResponseFieldBuilder() {
        if (authenticationResponseBuilder_ == null) {
          if (!(responseAPICase_ == 100)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse
                    .getDefaultInstance();
          }
          authenticationResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.AuthenticationResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 100;
        onChanged();;
        return authenticationResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponseOrBuilder> handshakeResponseBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public boolean hasHandshakeResponse() {
        return responseAPICase_ == 101;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse getHandshakeResponse() {
        if (handshakeResponseBuilder_ == null) {
          if (responseAPICase_ == 101) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
              .getDefaultInstance();
        } else {
          if (responseAPICase_ == 101) {
            return handshakeResponseBuilder_.getMessage();
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public Builder setHandshakeResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse value) {
        if (handshakeResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseAPI_ = value;
          onChanged();
        } else {
          handshakeResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 101;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public Builder setHandshakeResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse.Builder builderForValue) {
        if (handshakeResponseBuilder_ == null) {
          responseAPI_ = builderForValue.build();
          onChanged();
        } else {
          handshakeResponseBuilder_.setMessage(builderForValue.build());
        }
        responseAPICase_ = 101;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public Builder mergeHandshakeResponse(
          org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse value) {
        if (handshakeResponseBuilder_ == null) {
          if (responseAPICase_ == 101
              && responseAPI_ != org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
                  .getDefaultInstance()) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
                    .newBuilder(
                        (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_)
                    .mergeFrom(value).buildPartial();
          } else {
            responseAPI_ = value;
          }
          onChanged();
        } else {
          if (responseAPICase_ == 101) {
            handshakeResponseBuilder_.mergeFrom(value);
          }
          handshakeResponseBuilder_.setMessage(value);
        }
        responseAPICase_ = 101;
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public Builder clearHandshakeResponse() {
        if (handshakeResponseBuilder_ == null) {
          if (responseAPICase_ == 101) {
            responseAPICase_ = 0;
            responseAPI_ = null;
            onChanged();
          }
        } else {
          if (responseAPICase_ == 101) {
            responseAPICase_ = 0;
            responseAPI_ = null;
          }
          handshakeResponseBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse.Builder getHandshakeResponseBuilder() {
        return getHandshakeResponseFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponseOrBuilder getHandshakeResponseOrBuilder() {
        if ((responseAPICase_ == 101) && (handshakeResponseBuilder_ != null)) {
          return handshakeResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseAPICase_ == 101) {
            return (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_;
          }
          return org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
              .getDefaultInstance();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.HandshakeResponse handshakeResponse = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponseOrBuilder> getHandshakeResponseFieldBuilder() {
        if (handshakeResponseBuilder_ == null) {
          if (!(responseAPICase_ == 101)) {
            responseAPI_ =
                org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse
                    .getDefaultInstance();
          }
          handshakeResponseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse.Builder, org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponseOrBuilder>(
                  (org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.HandshakeResponse) responseAPI_,
                  getParentForChildren(), isClean());
          responseAPI_ = null;
        }
        responseAPICase_ = 101;
        onChanged();;
        return handshakeResponseBuilder_;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.geode.internal.protocol.protobuf.v1.Response)
    }

    // @@protoc_insertion_point(class_scope:org.apache.geode.internal.protocol.protobuf.v1.Response)
    private static final org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE =
          new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response();
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
          public Response parsePartialFrom(com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Response(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ErrorResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
     */
    boolean hasError();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error getError();

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorOrBuilder getErrorOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse}
   */
  public static final class ErrorResponse extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse)
      ErrorResponseOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use ErrorResponse.newBuilder() to construct.
    private ErrorResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ErrorResponse() {}

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private ErrorResponse(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.Builder subBuilder =
                  null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.parser(),
                  extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.class,
              org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder.class);
    }

    public static final int ERROR_FIELD_NUMBER = 1;
    private org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error error_;

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error getError() {
      return error_ == null
          ? org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.getDefaultInstance()
          : error_;
    }

    /**
     * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getError());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse)) {
        return super.equals(obj);
      }
      org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse other =
          (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) obj;

      boolean result = true;
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result && getError().equals(other.getError());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse)
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.class,
                org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.Builder.class);
      }

      // Construct using
      // org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_descriptor;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse getDefaultInstanceForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
            .getDefaultInstance();
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse build() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse buildPartial() {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse result =
            new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse(this);
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) {
          return mergeFrom(
              (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse other) {
        if (other == org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse
            .getDefaultInstance())
          return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse) e
                  .getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorOrBuilder> errorBuilder_;

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null
              ? org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.getDefaultInstance()
              : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public Builder setError(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public Builder setError(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public Builder mergeError(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ = org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error
                .newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.Builder getErrorBuilder() {

        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null
              ? org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.getDefaultInstance()
              : error_;
        }
      }

      /**
       * <code>.org.apache.geode.internal.protocol.protobuf.v1.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorOrBuilder> getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Error.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ErrorOrBuilder>(
                  getError(), getParentForChildren(), isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse)
    }

    // @@protoc_insertion_point(class_scope:org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse)
    private static final org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE =
          new org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse();
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ErrorResponse> PARSER =
        new com.google.protobuf.AbstractParser<ErrorResponse>() {
          public ErrorResponse parsePartialFrom(com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ErrorResponse(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<ErrorResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ErrorResponse> getParserForType() {
      return PARSER;
    }

    public org.apache.geode.internal.protocol.protobuf.v1.ClientProtocol.ErrorResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
  static {
    java.lang.String[] descriptorData = {"\n\027v1/clientProtocol.proto\022.org.apache.ge"
        + "ode.internal.protocol.protobuf.v1\032\031googl"
        + "e/protobuf/any.proto\032\023v1/region_API.prot"
        + "o\032\023v1/server_API.proto\032\023v1/basicTypes.pr"
        + "oto\032\027v1/connection_API.proto\"\262\001\n\007Message"
        + "\022J\n\007request\030\001 \001(\01327.org.apache.geode.int"
        + "ernal.protocol.protobuf.v1.RequestH\000\022L\n\010"
        + "response\030\002 \001(\01328.org.apache.geode.intern"
        + "al.protocol.protobuf.v1.ResponseH\000B\r\n\013me"
        + "ssageType\"\367\010\n\007Request\022V\n\013callbackArg\030\001 \001"
        + "(\0132A.org.apache.geode.internal.protocol."
        + "protobuf.v1.CallbackArguments\022P\n\nputRequ"
        + "est\030\002 \001(\0132:.org.apache.geode.internal.pr"
        + "otocol.protobuf.v1.PutRequestH\000\022P\n\ngetRe"
        + "quest\030\003 \001(\0132:.org.apache.geode.internal."
        + "protocol.protobuf.v1.GetRequestH\000\022V\n\rput"
        + "AllRequest\030\004 \001(\0132=.org.apache.geode.inte"
        + "rnal.protocol.protobuf.v1.PutAllRequestH"
        + "\000\022V\n\rgetAllRequest\030\005 \001(\0132=.org.apache.ge"
        + "ode.internal.protocol.protobuf.v1.GetAll"
        + "RequestH\000\022V\n\rremoveRequest\030\006 \001(\0132=.org.a"
        + "pache.geode.internal.protocol.protobuf.v"
        + "1.RemoveRequestH\000\022\\\n\020removeAllRequest\030\007 "
        + "\001(\0132@.org.apache.geode.internal.protocol"
        + ".protobuf.v1.RemoveAllRequestH\000\022p\n\032getAv"
        + "ailableServersRequest\030* \001(\0132J.org.apache"
        + ".geode.internal.protocol.protobuf.v1.Get"
        + "AvailableServersRequestH\000\022f\n\025getRegionNa"
        + "mesRequest\030+ \001(\0132E.org.apache.geode.inte"
        + "rnal.protocol.protobuf.v1.GetRegionNames"
        + "RequestH\000\022\\\n\020getRegionRequest\030, \001(\0132@.or"
        + "g.apache.geode.internal.protocol.protobu"
        + "f.v1.GetRegionRequestH\000\022f\n\025authenticatio"
        + "nRequest\030d \001(\0132E.org.apache.geode.intern"
        + "al.protocol.protobuf.v1.AuthenticationRe"
        + "questH\000\022\\\n\020handshakeRequest\030e \001(\0132@.org."
        + "apache.geode.internal.protocol.protobuf."
        + "v1.HandshakeRequestH\000B\014\n\nrequestAPI\"\217\t\n\010"
        + "Response\022R\n\013putResponse\030\002 \001(\0132;.org.apac"
        + "he.geode.internal.protocol.protobuf.v1.P"
        + "utResponseH\000\022R\n\013getResponse\030\003 \001(\0132;.org."
        + "apache.geode.internal.protocol.protobuf."
        + "v1.GetResponseH\000\022X\n\016putAllResponse\030\004 \001(\013"
        + "2>.org.apache.geode.internal.protocol.pr"
        + "otobuf.v1.PutAllResponseH\000\022X\n\016getAllResp"
        + "onse\030\005 \001(\0132>.org.apache.geode.internal.p"
        + "rotocol.protobuf.v1.GetAllResponseH\000\022X\n\016"
        + "removeResponse\030\006 \001(\0132>.org.apache.geode."
        + "internal.protocol.protobuf.v1.RemoveResp"
        + "onseH\000\022^\n\021removeAllResponse\030\007 \001(\0132A.org."
        + "apache.geode.internal.protocol.protobuf."
        + "v1.RemoveAllResponseH\000\022V\n\rerrorResponse\030"
        + "\r \001(\0132=.org.apache.geode.internal.protoc"
        + "ol.protobuf.v1.ErrorResponseH\000\022r\n\033getAva"
        + "ilableServersResponse\030* \001(\0132K.org.apache"
        + ".geode.internal.protocol.protobuf.v1.Get"
        + "AvailableServersResponseH\000\022h\n\026getRegionN"
        + "amesResponse\030+ \001(\0132F.org.apache.geode.in"
        + "ternal.protocol.protobuf.v1.GetRegionNam"
        + "esResponseH\000\022^\n\021getRegionResponse\030, \001(\0132"
        + "A.org.apache.geode.internal.protocol.pro"
        + "tobuf.v1.GetRegionResponseH\000\022h\n\026authenti"
        + "cationResponse\030d \001(\0132F.org.apache.geode."
        + "internal.protocol.protobuf.v1.Authentica"
        + "tionResponseH\000\022^\n\021handshakeResponse\030e \001("
        + "\0132A.org.apache.geode.internal.protocol.p"
        + "rotobuf.v1.HandshakeResponseH\000B\r\n\013respon"
        + "seAPI\"U\n\rErrorResponse\022D\n\005error\030\001 \001(\01325."
        + "org.apache.geode.internal.protocol.proto" + "buf.v1.Errorb\006proto3"};
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
            com.google.protobuf.AnyProto.getDescriptor(),
            org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.getDescriptor(),
            org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.getDescriptor(),
            org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.getDescriptor(),
            org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.getDescriptor(),},
        assigner);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_org_apache_geode_internal_protocol_protobuf_v1_Message_descriptor,
            new java.lang.String[] {"Request", "Response", "MessageType",});
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_org_apache_geode_internal_protocol_protobuf_v1_Request_descriptor,
            new java.lang.String[] {"CallbackArg", "PutRequest", "GetRequest", "PutAllRequest",
                "GetAllRequest", "RemoveRequest", "RemoveAllRequest", "GetAvailableServersRequest",
                "GetRegionNamesRequest", "GetRegionRequest", "AuthenticationRequest",
                "HandshakeRequest", "RequestAPI",});
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_org_apache_geode_internal_protocol_protobuf_v1_Response_descriptor,
            new java.lang.String[] {"PutResponse", "GetResponse", "PutAllResponse",
                "GetAllResponse", "RemoveResponse", "RemoveAllResponse", "ErrorResponse",
                "GetAvailableServersResponse", "GetRegionNamesResponse", "GetRegionResponse",
                "AuthenticationResponse", "HandshakeResponse", "ResponseAPI",});
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_descriptor =
        getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_org_apache_geode_internal_protocol_protobuf_v1_ErrorResponse_descriptor,
            new java.lang.String[] {"Error",});
    com.google.protobuf.AnyProto.getDescriptor();
    org.apache.geode.internal.protocol.protobuf.v1.RegionAPI.getDescriptor();
    org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.getDescriptor();
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.getDescriptor();
    org.apache.geode.internal.protocol.protobuf.v1.ConnectionAPI.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
