// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: v1/server_API.proto

package org.apache.geode.internal.protocol.protobuf.v1;

public final class ServerAPI {
  private ServerAPI() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public interface GetAvailableServersRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest}
   */
  public static final class GetAvailableServersRequest
      extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest)
      GetAvailableServersRequestOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use GetAvailableServersRequest.newBuilder() to construct.
    private GetAvailableServersRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GetAvailableServersRequest() {}

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private GetAvailableServersRequest(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.class,
              org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest)) {
        return super.equals(obj);
      }
      org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest other =
          (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type
     * {@code org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest)
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.class,
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.Builder.class);
      }

      // Construct using
      // org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_descriptor;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest getDefaultInstanceForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
            .getDefaultInstance();
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest build() {
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest buildPartial() {
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest result =
            new org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest(
                this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) {
          return mergeFrom(
              (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest other) {
        if (other == org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest
            .getDefaultInstance())
          return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest) e
                  .getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest)
    }

    // @@protoc_insertion_point(class_scope:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersRequest)
    private static final org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE =
          new org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest();
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetAvailableServersRequest> PARSER =
        new com.google.protobuf.AbstractParser<GetAvailableServersRequest>() {
          public GetAvailableServersRequest parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new GetAvailableServersRequest(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<GetAvailableServersRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetAvailableServersRequest> getParserForType() {
      return PARSER;
    }

    public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetAvailableServersResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    java.util.List<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server> getServersList();

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server getServers(int index);

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    int getServersCount();

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    java.util.List<? extends org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder> getServersOrBuilderList();

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder getServersOrBuilder(
        int index);
  }
  /**
   * Protobuf type
   * {@code org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse}
   */
  public static final class GetAvailableServersResponse
      extends com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse)
      GetAvailableServersResponseOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use GetAvailableServersResponse.newBuilder() to construct.
    private GetAvailableServersResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GetAvailableServersResponse() {
      servers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private GetAvailableServersResponse(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                servers_ =
                    new java.util.ArrayList<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server>();
                mutable_bitField0_ |= 0x00000001;
              }
              servers_.add(input.readMessage(
                  org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.parser(),
                  extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = java.util.Collections.unmodifiableList(servers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.class,
              org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder.class);
    }

    public static final int SERVERS_FIELD_NUMBER = 1;
    private java.util.List<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server> servers_;

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    public java.util.List<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server> getServersList() {
      return servers_;
    }

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    public java.util.List<? extends org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder> getServersOrBuilderList() {
      return servers_;
    }

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    public int getServersCount() {
      return servers_.size();
    }

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server getServers(int index) {
      return servers_.get(index);
    }

    /**
     * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
     */
    public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder getServersOrBuilder(
        int index) {
      return servers_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1)
        return true;
      if (isInitialized == 0)
        return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < servers_.size(); i++) {
        output.writeMessage(1, servers_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1)
        return size;

      size = 0;
      for (int i = 0; i < servers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, servers_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse)) {
        return super.equals(obj);
      }
      org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse other =
          (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) obj;

      boolean result = true;
      result = result && getServersList().equals(other.getServersList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getServersCount() > 0) {
        hash = (37 * hash) + SERVERS_FIELD_NUMBER;
        hash = (53 * hash) + getServersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
          extensionRegistry);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input,
          extensionRegistry);
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type
     * {@code org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse)
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.class,
                org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.Builder.class);
      }

      // Construct using
      // org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getServersFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          serversBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_descriptor;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse getDefaultInstanceForType() {
        return org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
            .getDefaultInstance();
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse build() {
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse buildPartial() {
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse result =
            new org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse(
                this);
        int from_bitField0_ = bitField0_;
        if (serversBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            servers_ = java.util.Collections.unmodifiableList(servers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.servers_ = servers_;
        } else {
          result.servers_ = serversBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) {
          return mergeFrom(
              (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse other) {
        if (other == org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse
            .getDefaultInstance())
          return this;
        if (serversBuilder_ == null) {
          if (!other.servers_.isEmpty()) {
            if (servers_.isEmpty()) {
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureServersIsMutable();
              servers_.addAll(other.servers_);
            }
            onChanged();
          }
        } else {
          if (!other.servers_.isEmpty()) {
            if (serversBuilder_.isEmpty()) {
              serversBuilder_.dispose();
              serversBuilder_ = null;
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              serversBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                  ? getServersFieldBuilder() : null;
            } else {
              serversBuilder_.addAllMessages(other.servers_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse) e
                  .getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.util.List<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server> servers_ =
          java.util.Collections.emptyList();

      private void ensureServersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ =
              new java.util.ArrayList<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server>(
                  servers_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder> serversBuilder_;

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public java.util.List<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server> getServersList() {
        if (serversBuilder_ == null) {
          return java.util.Collections.unmodifiableList(servers_);
        } else {
          return serversBuilder_.getMessageList();
        }
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public int getServersCount() {
        if (serversBuilder_ == null) {
          return servers_.size();
        } else {
          return serversBuilder_.getCount();
        }
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server getServers(
          int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);
        } else {
          return serversBuilder_.getMessage(index);
        }
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder setServers(int index,
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.set(index, value);
          onChanged();
        } else {
          serversBuilder_.setMessage(index, value);
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder setServers(int index,
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.set(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder addServers(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(value);
          onChanged();
        } else {
          serversBuilder_.addMessage(value);
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder addServers(int index,
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(index, value);
          onChanged();
        } else {
          serversBuilder_.addMessage(index, value);
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder addServers(
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder addServers(int index,
          org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder addAllServers(
          java.lang.Iterable<? extends org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server> values) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, servers_);
          onChanged();
        } else {
          serversBuilder_.addAllMessages(values);
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder clearServers() {
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          serversBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public Builder removeServers(int index) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.remove(index);
          onChanged();
        } else {
          serversBuilder_.remove(index);
        }
        return this;
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder getServersBuilder(
          int index) {
        return getServersFieldBuilder().getBuilder(index);
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder getServersOrBuilder(
          int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);
        } else {
          return serversBuilder_.getMessageOrBuilder(index);
        }
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public java.util.List<? extends org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder> getServersOrBuilderList() {
        if (serversBuilder_ != null) {
          return serversBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(servers_);
        }
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder addServersBuilder() {
        return getServersFieldBuilder().addBuilder(
            org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.getDefaultInstance());
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder addServersBuilder(
          int index) {
        return getServersFieldBuilder().addBuilder(index,
            org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.getDefaultInstance());
      }

      /**
       * <code>repeated .org.apache.geode.internal.protocol.protobuf.v1.Server servers = 1;</code>
       */
      public java.util.List<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder> getServersBuilderList() {
        return getServersFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder> getServersFieldBuilder() {
        if (serversBuilder_ == null) {
          serversBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.Server.Builder, org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.ServerOrBuilder>(
                  servers_, ((bitField0_ & 0x00000001) == 0x00000001), getParentForChildren(),
                  isClean());
          servers_ = null;
        }
        return serversBuilder_;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse)
    }

    // @@protoc_insertion_point(class_scope:org.apache.geode.internal.protocol.protobuf.v1.GetAvailableServersResponse)
    private static final org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE =
          new org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse();
    }

    public static org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetAvailableServersResponse> PARSER =
        new com.google.protobuf.AbstractParser<GetAvailableServersResponse>() {
          public GetAvailableServersResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new GetAvailableServersResponse(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<GetAvailableServersResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetAvailableServersResponse> getParserForType() {
      return PARSER;
    }

    public org.apache.geode.internal.protocol.protobuf.v1.ServerAPI.GetAvailableServersResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
  static {
    java.lang.String[] descriptorData = {"\n\023v1/server_API.proto\022.org.apache.geode."
        + "internal.protocol.protobuf.v1\032\023v1/basicT"
        + "ypes.proto\"\034\n\032GetAvailableServersRequest"
        + "\"f\n\033GetAvailableServersResponse\022G\n\007serve"
        + "rs\030\001 \003(\01326.org.apache.geode.internal.pro"
        + "tocol.protobuf.v1.Serverb\006proto3"};
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
        .internalBuildGeneratedFileFrom(descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
                org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.getDescriptor(),},
            assigner);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersRequest_descriptor,
            new java.lang.String[] {});
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_org_apache_geode_internal_protocol_protobuf_v1_GetAvailableServersResponse_descriptor,
            new java.lang.String[] {"Servers",});
    org.apache.geode.internal.protocol.protobuf.v1.BasicTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
